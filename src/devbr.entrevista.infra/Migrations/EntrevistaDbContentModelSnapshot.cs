// <auto-generated />
using System;
using DevBr.Entrevista.Infra.Contents;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevBr.Entrevista.Infra.Migrations
{
    [DbContext(typeof(EntrevistaDbContent))]
    partial class EntrevistaDbContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("SequenciaCandidato", "dbo");

            modelBuilder.HasSequence("SequenciaEntrevista", "dbo");

            modelBuilder.HasSequence("SequenciaEntrevistador", "dbo");

            modelBuilder.HasSequence("SequenciaGrupoPergunta", "dbo");

            modelBuilder.HasSequence("SequenciaLinguagem", "dbo");

            modelBuilder.HasSequence("SequenciaNivelConhecimento", "dbo");

            modelBuilder.HasSequence("SequenciaPergunta", "dbo");

            modelBuilder.HasSequence("SequenciaQuestionario", "dbo");

            modelBuilder.HasSequence("SequenciaRelatorio", "dbo");

            modelBuilder.HasSequence("SequenciaResposta", "dbo");

            modelBuilder.Entity("EntrevistaEntrevistador", b =>
                {
                    b.Property<Guid>("EntrevistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntrevistadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntrevistaId", "EntrevistadorId");

                    b.HasIndex("EntrevistadorId");

                    b.ToTable("EntrevistaEntrevistador");
                });

            modelBuilder.Entity("EntrevistadorLinguagem", b =>
                {
                    b.Property<Guid>("EntrevistadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LinguagemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntrevistadorId", "LinguagemId");

                    b.HasIndex("LinguagemId");

                    b.ToTable("EntrevistadorLinguagem");
                });

            modelBuilder.Entity("PerguntaQuestionario", b =>
                {
                    b.Property<Guid>("PerguntasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PerguntasId", "QuestionariosId");

                    b.HasIndex("QuestionariosId");

                    b.ToTable("PerguntaQuestionario", (string)null);
                });

            modelBuilder.Entity("QuestionarioRelatorio", b =>
                {
                    b.Property<Guid>("QuestionariosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RelatoriosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QuestionariosId", "RelatoriosId");

                    b.HasIndex("RelatoriosId");

                    b.ToTable("RelatorioQuestionario", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Candidato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Entrevistador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Entrevistadores", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Entrevistar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntrevista")
                        .HasColumnType("datetime2");

                    b.Property<string>("NivelEsperado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("RelatorioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("Entrevistas", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Linguagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Linguagens", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.questionarios.GrupoPergunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("GrupoPerguntas", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.questionarios.Pergunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GrupoPerguntaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoPerguntaId");

                    b.ToTable("Perguntas", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.questionarios.Questionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Questionarios", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.NivelConhecimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("NiveisConhecimento", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.Relatorio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("EntrevistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("PontosFortes")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("PontosFracos")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("EntrevistaId");

                    b.ToTable("Relatorios", (string)null);
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.Resposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"));

                    b.Property<int>("CodigoGrupoPergunta")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoGrupoPergunta")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<Guid>("NivelConhecimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RelatorioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RespostaCandidato")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RespostaEsperada")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("NivelConhecimentoId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("Respostas", (string)null);
                });

            modelBuilder.Entity("EntrevistaEntrevistador", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.Entrevistar", null)
                        .WithMany()
                        .HasForeignKey("EntrevistaId")
                        .IsRequired();

                    b.HasOne("devbr.entrevista.domain.entities.Entrevistador", null)
                        .WithMany()
                        .HasForeignKey("EntrevistadorId")
                        .IsRequired();
                });

            modelBuilder.Entity("EntrevistadorLinguagem", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.Entrevistador", null)
                        .WithMany()
                        .HasForeignKey("EntrevistadorId")
                        .IsRequired();

                    b.HasOne("devbr.entrevista.domain.entities.Linguagem", null)
                        .WithMany()
                        .HasForeignKey("LinguagemId")
                        .IsRequired();
                });

            modelBuilder.Entity("PerguntaQuestionario", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.questionarios.Pergunta", null)
                        .WithMany()
                        .HasForeignKey("PerguntasId")
                        .IsRequired();

                    b.HasOne("devbr.entrevista.domain.entities.questionarios.Questionario", null)
                        .WithMany()
                        .HasForeignKey("QuestionariosId")
                        .IsRequired();
                });

            modelBuilder.Entity("QuestionarioRelatorio", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.questionarios.Questionario", null)
                        .WithMany()
                        .HasForeignKey("QuestionariosId")
                        .IsRequired();

                    b.HasOne("devbr.entrevista.domain.entities.relatorios.Relatorio", null)
                        .WithMany()
                        .HasForeignKey("RelatoriosId")
                        .IsRequired();
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Entrevistar", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.Candidato", "Candidato")
                        .WithMany("Entrevistas")
                        .HasForeignKey("CandidatoId")
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.questionarios.Pergunta", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.questionarios.GrupoPergunta", "GrupoPergunta")
                        .WithMany("Perguntas")
                        .HasForeignKey("GrupoPerguntaId")
                        .IsRequired();

                    b.Navigation("GrupoPergunta");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.Relatorio", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.Entrevistar", "Entrevista")
                        .WithMany("Relatorios")
                        .HasForeignKey("EntrevistaId")
                        .IsRequired();

                    b.Navigation("Entrevista");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.Resposta", b =>
                {
                    b.HasOne("devbr.entrevista.domain.entities.relatorios.NivelConhecimento", "NivelConhecimento")
                        .WithMany("Respostas")
                        .HasForeignKey("NivelConhecimentoId")
                        .IsRequired();

                    b.HasOne("devbr.entrevista.domain.entities.relatorios.Relatorio", "Relatorio")
                        .WithMany()
                        .HasForeignKey("RelatorioId")
                        .IsRequired();

                    b.Navigation("NivelConhecimento");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Candidato", b =>
                {
                    b.Navigation("Entrevistas");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.Entrevistar", b =>
                {
                    b.Navigation("Relatorios");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.questionarios.GrupoPergunta", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("devbr.entrevista.domain.entities.relatorios.NivelConhecimento", b =>
                {
                    b.Navigation("Respostas");
                });
#pragma warning restore 612, 618
        }
    }
}
